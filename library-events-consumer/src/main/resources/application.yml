server.port: 8082

spring.profiles.active: local

---

spring:
  config:
    activate:
      on-profile: local
  kafka:
    consumer:
      bootstrap-servers: localhost:29092, localhost:39092
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-consumer-group

  h2.console.enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate.ddl-auto: create
    # hibernate.ddl-auto: create-drop
  datasource:
    username: admin
    password:
    driver-class-name: org.h2.Driver
    # persistent store
    # url: jdbc:h2:file:~/data/dump
    # volatile store
    url: jdbc:h2:mem:kafka-poc

kafka.topic-id: library-events

---

spring:
  config:
    activate:
      on-profile: uat
  kafka:
    template:
      default-topic: library-events
    consumer:
      bootstrap-servers: localhost:99095,localhost:99096,localhost:99097
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group
      ssl:
        trust-store-location: file:<location>/client.truststore.jks
        trust-store-password: password
        key-store-location: file:<location>/client.keystore.jks
        key-store-password: password
    producer:
      bootstrap-servers: localhost:99095,localhost:99096,localhost:99097
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      security:
        protocol: SSL
      ssl.endpoint.identification.algorithm:

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
  h2:
    console:
      enabled: true